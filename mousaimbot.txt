-- Services
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local camera = workspace.CurrentCamera
local localPlayer = Players.LocalPlayer

-- Variables
local aimEnabled = false
local aimKey = Enum.KeyCode.Q
local maxMoveSpeed = 50  -- Very high max move speed to track fast movements
local snapStrength = 0.5 -- Increased snap strength for quicker snapping

-- Find the closest player to the mouse
local function getClosestPlayerToMouse()
    local closestPlayer = nil
    local shortestDistance = math.huge
    local mousePosition = UserInputService:GetMouseLocation()

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local headPosition, onScreen = camera:WorldToViewportPoint(player.Character.Head.Position)
            if onScreen then
                local distance = (Vector2.new(headPosition.X, headPosition.Y) - mousePosition).magnitude
                if distance < shortestDistance then
                    closestPlayer = player
                    shortestDistance = distance
                end
            end
        end
    end

    return closestPlayer
end

-- Aim directly at the middle of the target's head with stronger snap and tracking
local function aimAt(target)
    if target and target.Character and target.Character:FindFirstChild("Head") then
        -- Get the size of the player's head
        local headSize = target.Character.Head.Size
        -- Calculate the middle of the head
        local headMiddle = target.Character.Head.Position + Vector3.new(0, headSize.Y / 2, 0)
        -- Convert the head middle position to viewport space
        local headPosition, onScreen = camera:WorldToViewportPoint(headMiddle)
        local mousePosition = UserInputService:GetMouseLocation()

        if onScreen then
            -- Calculate the difference between the mouse and target position
            local deltaX = headPosition.X - mousePosition.X
            local deltaY = headPosition.Y - mousePosition.Y

            -- Apply a high-speed snap that adjusts rapidly but with controlled movement
            local moveX = math.clamp(deltaX, -maxMoveSpeed, maxMoveSpeed)
            local moveY = math.clamp(deltaY, -maxMoveSpeed, maxMoveSpeed)

            -- Apply stronger snap strength for quicker aiming
            mousemoverel(moveX * snapStrength, moveY * snapStrength)
        end
    end
end

-- Input handling for toggles
UserInputService.InputBegan:Connect(function(input, isTyping)
    if isTyping then return end

    if input.KeyCode == aimKey then
        aimEnabled = not aimEnabled
        print("Aimbot: " .. (aimEnabled and "ON" or "OFF"))
    end
end)

-- Main loop: Aimbot constantly aims at the target when enabled
RunService.RenderStepped:Connect(function()
    if aimEnabled then
        local target = getClosestPlayerToMouse()
        if target then
            aimAt(target)
        end
    end
end)
